group 'com.cs.ssm'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'war'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}
configurations {
    mybatisGenerator
}

dependencies {

    compile 'org.apache.tomcat:tomcat-servlet-api:8.0.24'
    compile 'jstl:jstl:1.2'
    compile 'org.springframework:spring-beans:4.1.7.RELEASE'
    compile 'org.springframework:spring-web:4.1.7.RELEASE'
    compile 'org.springframework:spring-webmvc:4.1.7.RELEASE'
    compile 'org.springframework:spring-tx:4.1.7.RELEASE'
    compile 'com.alibaba:druid:1.0.15'
    compile 'org.aspectj:aspectjweaver:1.8.6'
    compile 'mysql:mysql-connector-java:5.1.36'
    compile 'org.mybatis:mybatis-spring:1.2.3'
    compile 'org.mybatis:mybatis:3.3.0'
    compile 'org.springframework:spring-jdbc:4.1.7.RELEASE'
    compile 'junit:junit:4.12'
    compile 'org.springframework:spring-test:4.0.5.RELEASE'

    compile 'com.fasterxml.jackson.core:jackson-core:2.8.7'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.8.7'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.7'

    compile "org.apache.shiro:shiro-core:1.2.2"
    compile "org.apache.shiro:shiro-web:1.2.2"
    compile 'org.apache.shiro:shiro-spring:1.2.2'

    providedCompile 'javax.servlet:servlet-api:2.5'
    testCompile group: 'junit', name: 'junit', version: '4.11'

    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.5'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.40'
    mybatisGenerator 'tk.mybatis:mapper:3.3.9'

}

def getDbProperties = {
    def properties = new Properties()
    file("src/main/resources/mybatis-generator/config.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }
    properties
}

task mybatisGenerate << {
    def properties = getDbProperties()
    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
    ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
    ant.properties['userId'] = properties.getProperty("jdbc.username")
    ant.properties['password'] = properties.getProperty("jdbc.password")
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = properties.getProperty("package.model")
    ant.properties['mapperPackage'] = properties.getProperty("package.mapper")
    ant.properties['sqlMapperPackage'] = properties.getProperty("package.xml")
    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: true,
            configfile: 'src/main/resources/mybatis-generator/generatorConfig.xml', verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
        }
    }
}


